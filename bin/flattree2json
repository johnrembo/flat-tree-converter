#!/usr/bin/env php
<?php

define('FIRST_LINE', '"Item Name";"Type";"Parent";"Relation"');

require __DIR__.'/../vendor/autoload.php';

use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;
use Rembo\FlatTreeConverter\TreeBuilder;
use Rembo\FlatTreeConverter\RecordFactory;

(new SingleCommandApplication())
    ->setName('PHP Flat tree to JSON converter')
    ->setVersion('1.0.0')
    ->addArgument('input', InputArgument::REQUIRED, 'Input flat tree CSV file path')
    ->addArgument('output', InputArgument::REQUIRED, 'Output JSON file path')
    ->setCode(function (InputInterface $input, OutputInterface $output): int {
        $file = fopen($input->getArgument('input'), 'r');
        if (!$file || (($line = fgets($file)) === false) || (trim($line) != FIRST_LINE)) {
            return 1;
        }
        $treeBuilder = new TreeBuilder();
        while ((list($itemName, $type, $parent, $relation) = fgetcsv($file, null, ';')) !== false) {
            $record = RecordFactory::createFromParams($itemName, $type, $parent, $relation);
            $treeBuilder->populate($record);
        }
        fclose($file);
        if (file_put_contents(
            $input->getArgument('output'),
            rtrim($treeBuilder->getRoot()->childrenToJson(), PHP_EOL)
        ) === false) {
            return 1;
        }
        return 0;
    })
    ->run();
