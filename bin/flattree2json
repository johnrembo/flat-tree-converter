#!/usr/bin/env php
<?php

define('FIRST_LINE', '"Item Name";"Type";"Parent";"Relation"');
define('TYPE_PRODUCT', 'Изделия и компоненты');
define('TYPE_VARIANT', 'Варианты комплектации');
define('TYPE_COMPONENT', 'Прямые компоненты');

require __DIR__.'/../vendor/autoload.php';

use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;
use Rembo\FlatTreeConverter\Tree;

(new SingleCommandApplication())
    ->setName('PHP Flat tree to JSON converter')
    ->setVersion('1.0.0')
    ->addArgument('input', InputArgument::REQUIRED, 'Input flat tree CSV file path')
    ->addArgument('output', InputArgument::REQUIRED, 'Output JSON file path')
    ->setCode(function (InputInterface $input, OutputInterface $output): int {
        $file = fopen($input->getArgument('input'), 'r');
        if (!$file || (($line = fgets($file)) === false)
            || (trim($line) != FIRST_LINE)) {
            $output->writeln('Invalid input');
            return 1;
        }
        $parentIndex = [];
        $root = new Tree();
        while ((list($itemName, $type, $parent, $relation) = fgetcsv($file, null, ';')) !== false) {
            if (!array_key_exists($itemName, $parentIndex)) {
                $parentIndex[$itemName] = new Tree($itemName);
            }

            if (empty($parent)) {
                $root->addChild($parentIndex[$itemName]);
            } else {
                if (!array_key_exists($parent, $parentIndex)) {
                    $parentIndex[$parent] = new Tree($parent);
                }
                $parentIndex[$parent]->addChild($parentIndex[$itemName]);
            }

            if ($type == TYPE_COMPONENT) {
                if (!array_key_exists($relation, $parentIndex)) {
                    $parentIndex[$relation] = new Tree($relation);
                }
                $parentIndex[$itemName]->setRelation($parentIndex[$relation]);
            }
        }
        fclose($file);
        $output->write(rtrim($root->childrenToJson(), PHP_EOL));
        return 0;
    })

    ->run();
